[tool.poetry]
name = "yaspin"
version = "3.3.0"
description = "Yet Another Terminal Spinner"
license = "MIT"
authors = ["Pavlo Dmytrenko <pavdmyt@aiven.io>"]
readme = "README.md"
homepage = "https://github.com/pavdmyt/yaspin"
repository = "https://github.com/pavdmyt/yaspin"
documentation = "https://github.com/pavdmyt/yaspin/blob/master/README.md"
keywords = ["spinner", "console", "terminal", "loader", "indicator"]
include = [
    { path = "tests", format = "sdist" },
    { path = "examples", format = "sdist" },
    { path = "HISTORY.rst", format = "sdist"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Environment :: MacOS X",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Other Audience",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: Implementation",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: User Interfaces",
    "Topic :: System :: Logging",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Shells",
    "Topic :: Terminals",
    "Topic :: Utilities",
]

[tool.poetry.dependencies]
python = "^3.10"
termcolor = "^3.1"

[tool.poetry.group.dev.dependencies]
mypy = "^1.17"
pytest = "^8.4"
pytest-xdist = "^3.8"
pytest-cov = "^6.2"
pytest-mock = "^3.14.0"
semgrep = "^1.132"
ruff = "^0.12"
ruamel-yaml-clib = "^0.2.14"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/pavdmyt/yaspin/issues"
"Changelog" = "https://github.com/pavdmyt/yaspin/releases"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.10"
show_error_codes = true
pretty = true
disable_error_code = ["annotation-unchecked"]
namespace_packages = false
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.ruff]
line-length = 110
target-version = "py310"

[tool.ruff.format]
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # flake8-tidy-imports
    "TID",
    # isort
    "I",
    # mutable-argument-default - Do not use mutable data structures for argument defaults.
    "B006",
]

[tool.ruff.lint.isort]

# Combines as imports on the same line.
combine-as-imports = true

# Whether to place import from imports before straight imports when sorting.
from-first = true

# The number of lines to place between "direct" and 'import from' imports.
lines-between-types = 1

# Put all imports into the same section bucket.
# This configuration breaks the Python convention.
# no-sections = true

# Order imports by type, which is determined by case, in addition to alphabetically.
order-by-type = false
